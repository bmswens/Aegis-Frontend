{"version":3,"file":"static/js/141.8e4b1ce4.chunk.js","mappings":"6RAgBA,SAASA,EAAYC,GACjB,IAAQC,EAAWD,EAAXC,OAuCFC,GAAQC,EAAAA,EAAAA,KACRC,GAAUC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAE/CC,EAAiB,CACnBC,OAAOL,EACPM,OAAON,EACPO,SAASP,EACTQ,OAAOR,GAGX,OACIS,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACDC,MAAI,EACJC,GAAI,GACJC,GAAI,CACAC,OAAQ,8BACVC,UAEFN,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CACLC,KAAMpB,EACNqB,QA1DI,CACZ,CACIC,MAAO,YACPC,WAAY,aACZC,KAAM,KAEV,CACIF,MAAO,WACPC,WAAY,YACZC,KAAM,KAEV,CACIF,MAAO,QACPC,WAAY,QACZC,KAAM,GAEV,CACIF,MAAO,aACPC,WAAY,aACZC,KAAM,GAEV,CACIF,MAAO,QACPC,WAAY,QACZC,KAAM,GAEV,CACIF,MAAO,UACPC,WAAY,UACZC,KAAM,KAEV,CACIF,MAAO,QACPC,WAAY,QACZC,KAAM,IAyBFC,MAAO,CAAEC,QAASC,EAAAA,GAClBC,aAAc,CACVC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,KAC3CV,QAAS,CACLW,sBAAuBzB,IAG/B0B,gBAAiB,CAAC,EAAG,GAAI,GAAI,OAI7C,CAuCA,UArCA,SAA0BlC,GAEtB,IAAQmC,GAASC,EAAAA,EAAAA,MAATD,KACRE,EAA8BC,EAAAA,UAAe,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAAwBL,EAAAA,SAAe,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAWpB,OATAN,EAAAA,WAAgB,WACO,SAAAS,IAIlB,OAJkBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAnB,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBC,EAAAA,EAAAA,IAAAA,eAAuBtB,GAAK,OAAtCiB,EAACE,EAAAI,KACLZ,EAAQM,GACRV,GAAW,GAAM,wBAAAY,EAAAK,OAAA,GAAAR,EAAA,MACpBS,MAAA,KAAAC,UAAA,EALkB,WACAd,EAAAa,MAAC,KAADC,UAAA,CAKnBC,EACJ,GAAG,CAAC3B,IAEAM,GAEIsB,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAA7C,SAAA,EACRN,EAAAA,EAAAA,KAACoD,EAAAA,gBAAe,KAChBpD,EAAAA,EAAAA,KAACoD,EAAAA,gBAAe,QAMxBF,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAA7C,SAAA,EACRN,EAAAA,EAAAA,KAACqD,EAAAA,GAAQC,EAAAA,EAAAA,GAAA,CACLC,QAAM,GACFvB,KAERhC,EAAAA,EAAAA,KAACd,EAAW,CACRE,OAAQ4C,EAAK5C,WAI7B,C","sources":["content/teams/DetailedTeamPage.js"],"sourcesContent":["// React\nimport React from 'react'\n\n// MUI\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { Grid, useMediaQuery, useTheme } from '@mui/material'\n\n// react router\nimport { useParams } from 'react-router-dom'\n\n// custom \nimport { ContentGrid } from '../Content'\nimport TeamCard from './TeamCard'\nimport api from '../../api'\nimport { LoadingSkeleton } from '../people/People'\n\nfunction PeopleTable(props) {\n    const { people } = props\n    const columns = [\n        {\n            field: \"firstName\",\n            headerName: \"First Name\",\n            flex: 0.75\n        },\n        {\n            field: \"lastName\",\n            headerName: \"Last Name\",\n            flex: 0.75\n        },\n        {\n            field: \"title\",\n            headerName: \"Title\",\n            flex: 1\n        },\n        {\n            field: \"supervisor\",\n            headerName: \"Supervisor\",\n            flex: 1\n        },\n        {\n            field: \"phone\",\n            headerName: \"Phone\",\n            flex: 1\n        },\n        {\n            field: \"address\",\n            headerName: \"Address\",\n            flex: 1.5\n        },\n        {\n            field: \"email\",\n            headerName: \"Email\",\n            flex: 1\n        }\n    ]\n\n    const theme = useTheme()\n    const isSmall = useMediaQuery(theme.breakpoints.down('md'))\n\n    const visibleColumns = {\n        title: isSmall ? false : true,\n        phone: isSmall ? false : true,\n        address: isSmall ? false : true,\n        email: isSmall ? false : true,\n    }\n\n    return (\n        <Grid \n            item \n            xs={12}\n            sx={{\n                height: \"calc(100vh - 65px - 155px)\"\n            }}\n        >\n            <DataGrid\n                rows={people}\n                columns={columns}\n                slots={{ toolbar: GridToolbar }}\n                initialState={{\n                    pagination: { paginationModel: { pageSize: 12 } },\n                    columns: {\n                        columnVisibilityModel: visibleColumns\n                    }\n                }}\n                pageSizeOptions={[5, 12, 25, 50]}\n            />\n        </Grid>\n    )\n}\n\nfunction DetailedTeamPage(props) {\n\n    const { uuid } = useParams()\n    const [loading, setLoading] = React.useState(true)\n    const [team, setTeam] = React.useState({})\n\n    React.useEffect(() => {\n        async function load() {\n            let t = await api.org.getDetailedOrg(uuid)\n            setTeam(t)\n            setLoading(false)\n        }\n        load()\n    }, [uuid])\n\n    if (loading) {\n        return (\n            <ContentGrid>\n                <LoadingSkeleton />\n                <LoadingSkeleton />\n            </ContentGrid>\n        )\n    }\n\n    return (\n        <ContentGrid>\n            <TeamCard\n                noLink\n                {...team}\n            />\n            <PeopleTable\n                people={team.people}\n            />\n        </ContentGrid>\n    )\n}\n\nexport default DetailedTeamPage "],"names":["PeopleTable","props","people","theme","useTheme","isSmall","useMediaQuery","breakpoints","down","visibleColumns","title","phone","address","email","_jsx","Grid","item","xs","sx","height","children","DataGrid","rows","columns","field","headerName","flex","slots","toolbar","GridToolbar","initialState","pagination","paginationModel","pageSize","columnVisibilityModel","pageSizeOptions","uuid","useParams","_React$useState","React","_React$useState2","_slicedToArray","loading","setLoading","_React$useState3","_React$useState4","team","setTeam","_load","_asyncToGenerator","_regeneratorRuntime","mark","_callee","t","wrap","_context","prev","next","api","sent","stop","apply","arguments","load","_jsxs","ContentGrid","LoadingSkeleton","TeamCard","_objectSpread","noLink"],"sourceRoot":""}