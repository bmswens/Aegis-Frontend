{"version":3,"file":"static/js/141.64627f1b.chunk.js","mappings":"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","sources":["content/teams/DetailedTeamPage.js","content/teams/TeamQuickInfoDialog.js","content/teams/TeamCard.js","dialog/TeamDialog.js"],"sourcesContent":["// React\nimport React from 'react'\n\n// MUI\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { Grid, useMediaQuery, useTheme } from '@mui/material'\n\n// react router\nimport { useParams } from 'react-router-dom'\n\n// custom \nimport { ContentGrid } from '../Content'\nimport TeamCard from './TeamCard'\nimport APIContext from '../../context/APIContext'\nimport { LoadingSkeleton } from '../people/People'\n\nfunction PeopleTable(props) {\n    const { people } = props\n    const columns = [\n        {\n            field: \"firstName\",\n            headerName: \"First Name\",\n            flex: 0.75\n        },\n        {\n            field: \"lastName\",\n            headerName: \"Last Name\",\n            flex: 0.75\n        },\n        {\n            field: \"title\",\n            headerName: \"Title\",\n            flex: 1\n        },\n        {\n            field: \"supervisor\",\n            headerName: \"Supervisor\",\n            flex: 1\n        },\n        {\n            field: \"phone\",\n            headerName: \"Phone\",\n            flex: 1\n        },\n        {\n            field: \"address\",\n            headerName: \"Address\",\n            flex: 1.5\n        },\n        {\n            field: \"email\",\n            headerName: \"Email\",\n            flex: 1\n        }\n    ]\n\n    const theme = useTheme()\n    const isSmall = useMediaQuery(theme.breakpoints.down('md'))\n\n    const visibleColumns = {\n        title: isSmall ? false : true,\n        phone: isSmall ? false : true,\n        address: isSmall ? false : true,\n        email: isSmall ? false : true,\n    }\n\n    return (\n        <Grid \n            item \n            xs={12}\n            sx={{\n                height: \"calc(100vh - 65px - 155px)\"\n            }}\n        >\n            <DataGrid\n                rows={people}\n                columns={columns}\n                slots={{ toolbar: GridToolbar }}\n                initialState={{\n                    pagination: { paginationModel: { pageSize: 12 } },\n                    columns: {\n                        columnVisibilityModel: visibleColumns\n                    }\n                }}\n                pageSizeOptions={[5, 12, 25, 50]}\n            />\n        </Grid>\n    )\n}\n\nfunction DetailedTeamPage(props) {\n\n    const { uuid } = useParams()\n    const [loading, setLoading] = React.useState(true)\n    const [team, setTeam] = React.useState({})\n    const apiContext = React.useContext(APIContext)\n\n    React.useEffect(() => {\n        setLoading(true)\n    }, [apiContext.api.driver, apiContext.lastUpdate])\n\n    React.useEffect(() => {\n        async function load() {\n            let t = await apiContext.api.org.getDetailedOrg(uuid)\n            setTeam(t)\n            setLoading(false)\n        }\n        if (loading) {\n            load()\n        }\n    }, [uuid, apiContext.api.org, loading])\n\n    if (loading) {\n        return (\n            <ContentGrid>\n                <LoadingSkeleton />\n                <LoadingSkeleton />\n            </ContentGrid>\n        )\n    }\n\n    return (\n        <ContentGrid>\n            <TeamCard\n                noLink\n                {...team}\n            />\n            <PeopleTable\n                people={team.people}\n            />\n        </ContentGrid>\n    )\n}\n\nexport default DetailedTeamPage ","// React\nimport React from 'react'\n\n// MUI\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Stack, TextField } from '@mui/material'\nimport { Link } from 'react-router-dom'\n\nfunction AdminChip(props) {\n    const {\n        name,\n        id\n    } = props\n\n    return (\n        <Link to={`/people?search=${id}`} style={{ textDecoration: \"none\", color: \"inherit\" }}>\n            <Chip\n                label={name}\n                color=\"primary\"\n                clickable\n            />\n        </Link>\n    )\n}\n\nfunction TeamQuickInfoDialog(props) {\n    const {\n        open,\n        close,\n        name,\n        address,\n        email,\n        phone,\n        admins\n    } = props\n\n    const adminList = admins || []\n\n    return (\n        <Dialog\n            maxWidth=\"sm\"\n            fullWidth\n            open={open}\n            onClose={close}\n        >\n            <DialogTitle align=\"center\">\n                Team Info\n            </DialogTitle>\n            <DialogContent>\n                <Stack\n                    spacing={1}\n                    sx={{\n                        marginTop: 1\n                    }}\n                >\n                    <TextField\n                        disabled\n                        fullWidth\n                        label=\"Name\"\n                        value={name}\n                    />\n                    <TextField\n                        disabled\n                        fullWidth\n                        label=\"Address\"\n                        value={address}\n                    />\n                    <TextField\n                        disabled\n                        fullWidth\n                        label=\"Email\"\n                        value={email}\n                    />\n                    <TextField\n                        disabled\n                        fullWidth\n                        label=\"Phone\"\n                        value={phone}\n                    />\n                    <Divider>Admins</Divider>\n                    <Stack\n                        direction=\"row\"\n                        spacing={1}\n                    >\n                        {adminList.map(admin => <AdminChip key={admin.id} {...admin} />)}\n                    </Stack>\n                </Stack>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"contained\"\n                    onClick={close}\n                >\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default TeamQuickInfoDialog","// React\nimport React from 'react'\n\n// MUI\nimport { Avatar, Box, Card, CardActions, CardHeader, Grid, IconButton, Tooltip, useTheme } from '@mui/material'\n\n// MUI Icons\nimport PlaceIcon from '@mui/icons-material/Place'\nimport EmailIcon from '@mui/icons-material/Email'\nimport CallIcon from '@mui/icons-material/Call'\nimport InfoIcon from '@mui/icons-material/Info'\nimport LaunchIcon from '@mui/icons-material/Launch'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\n// router dom\nimport { Link } from 'react-router-dom'\nimport TeamQuickInfoDialog from './TeamQuickInfoDialog'\nimport UserContext from '../../context/UserContext'\nimport TeamDialog from '../../dialog/TeamDialog'\nimport ConfirmDialog from '../../dialog/ConfirmDialog'\nimport APIContext from '../../context/APIContext'\n\nfunction AdminActions(props) {\n\n    const { team } = props\n    const user = React.useContext(UserContext)\n    const apiContext = React.useContext(APIContext)\n\n    const [editOpen, setEditOpen] = React.useState(false)\n    const [deleteOpen, setDeleteOpen] = React.useState(false)\n\n    async function deleteTeam() {\n        await apiContext.api.org.deleteTeam(team.id)\n        apiContext.update()\n    }\n\n    if (!user.admin) {\n        return null\n    }\n\n    return (\n        <>\n            <IconButton\n                aria-label=\"Edit Team\"\n                onClick={() => setEditOpen(true)}\n            >\n                <EditIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton\n                aria-label=\"Delete Team\"\n                onClick={() => setDeleteOpen(true)}\n            >\n                <DeleteIcon fontSize=\"large\" />\n            </IconButton>\n            <TeamDialog\n                open={editOpen}\n                close={() => setEditOpen(false)}\n                team={team}\n            />\n            <ConfirmDialog\n                open={deleteOpen}\n                close={() => setDeleteOpen(false)}\n                callback={deleteTeam}\n                text={`Are you sure you want to delete the entry for ${team.name}?`}\n            />\n        </>\n    )\n}\n\nfunction LinkButton(props) {\n    const { title, to, icon, external } = props\n\n    if (!to) {\n        return (\n            <Tooltip\n                title={title}\n            >\n                <span>\n                    <IconButton\n                        aria-label={title}\n                        disabled\n                    >\n                        {icon}\n                    </IconButton>\n                </span>\n            </Tooltip>\n        )\n    }\n    return (\n        <Link to={to} target={external ? \"_blank\" : \"_self\"}>\n            <Tooltip\n                title={title}\n            >\n                <IconButton\n                    aria-label={title}\n                >\n                    {icon}\n                </IconButton>\n            </Tooltip>\n        </Link>\n    )\n}\n\nfunction TeamCard(props) {\n\n    const theme = useTheme()\n\n    const {\n        name,\n        id,\n        memberCount,\n        address,\n        email,\n        phone,\n        admins,\n        noLink\n    } = props\n\n    let addressURL = \"\"\n    if (address) {\n        addressURL = `https://www.google.com/maps/place/${encodeURIComponent(address)}`\n    }\n\n    let emailURL = \"\"\n    if (email) {\n        emailURL = `mailto:${email}`\n    }\n\n    let phoneURL = \"\"\n    if (phone) {\n        phoneURL = `tel:${phone}`\n    }\n\n    // dialog\n    const [infoOpen, setInfoOpen] = React.useState(false)\n\n    React.useEffect(() => {\n        return () => setInfoOpen(false)\n    }, [])\n\n    return (\n        <Grid item xs={12}>\n            <Card>\n                <CardHeader\n                    title={name}\n                    titleTypographyProps={{\n                        variant: \"h5\"\n                    }}\n                    avatar={\n                    <Tooltip\n                        title=\"Member Count\"\n                    >\n                        <Avatar\n                            sx={{\n                                bgcolor: theme.palette.primary.dark\n                            }}\n                        >\n                            {memberCount}\n                        </Avatar>\n                    </Tooltip>\n                }\n                />\n                <CardActions>\n                    <Tooltip\n                        title=\"More Info\"\n                    >\n                        <IconButton\n                            onClick={() => setInfoOpen(true)}\n                        >\n                            <InfoIcon fontSize=\"large\" />\n                        </IconButton>\n                    </Tooltip>\n                    { noLink ? null : \n                        <LinkButton\n                            title=\"Details\"\n                            to={`/teams/${id}`}\n                            icon={<LaunchIcon fontSize=\"large\" />}\n                        />\n                    }\n                    <AdminActions\n                        team={{\n                            id,\n                            name,\n                            address,\n                            phone,\n                            email\n                        }}\n                    />\n                    <Box sx={{flexGrow: 1}} />\n                    <LinkButton\n                        external\n                        title=\"View Address\"\n                        to={addressURL}\n                        icon={<PlaceIcon fontSize=\"large\" />}\n                    />\n                    <LinkButton\n                        external\n                        title=\"Send Email\"\n                        to={emailURL}\n                        icon={<EmailIcon fontSize=\"large\" />}\n                    />\n                    <LinkButton\n                        external\n                        title=\"Call\"\n                        to={phoneURL}\n                        icon={<CallIcon fontSize=\"large\" />}\n                    />\n                </CardActions>\n            </Card>\n            <TeamQuickInfoDialog\n                open={infoOpen}\n                close={() => setInfoOpen(false)}\n                name={name}\n                address={address}\n                email={email}\n                phone={phone}\n                admins={admins}\n            />\n        </Grid>\n    )\n}\n\nexport default TeamCard","// React\nimport React from 'react'\n\n//MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Stack, TextField } from '@mui/material'\nimport APIContext from '../context/APIContext'\n\nconst emptyTeam = {\n    id: null,\n    name: \"\",\n    address: \"\",\n    email: \"\",\n    phone: \"\"\n}\n\nfunction TeamDialog(props) {\n\n    const { open, close, team } = props\n    let startData = emptyTeam\n    if (team?.id) {\n        startData = team\n    }\n    const [data, setData] = React.useState(startData)\n    const { api } = React.useContext(APIContext)\n    \n    function handleClose() {\n        if (!team?.id) {\n            setData(emptyTeam)\n        }\n        close()\n    }\n\n    async function submit() {\n        if (team?.id) {\n            await api.org.editTeam(data)\n        }\n        else {\n            await api.org.addTeam(data)\n        }\n        handleClose()\n    }\n\n    return (\n        <Dialog\n            maxWidth=\"sm\"\n            fullWidth\n            open={open}\n            onClose={handleClose}\n        >\n            <DialogTitle align=\"center\">\n                {team?.id ? \"Edit Team\" : \"Add New Team\"}\n            </DialogTitle>\n            <DialogContent>\n                <Stack\n                    spacing={1}\n                    sx={{marginTop: 1}}\n                >\n                    <TextField\n                        label=\"Name\"\n                        fullWidth\n                        value={data.name}\n                        onChange={(event) => setData({...data, name: event.target.value})}\n                    />\n                    <TextField\n                        label=\"Address\"\n                        fullWidth\n                        value={data.address}\n                        onChange={(event) => setData({...data, address: event.target.value})}\n                    />\n                    <TextField\n                        label=\"Email\"\n                        fullWidth\n                        value={data.email}\n                        onChange={(event) => setData({...data, email: event.target.value})}\n                    />\n                    <TextField\n                        label=\"Phone\"\n                        fullWidth\n                        value={data.phone}\n                        onChange={(event) => setData({...data, phone: event.target.value})}\n                    />\n                </Stack>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"contained\"\n                    onClick={handleClose}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={submit}\n                >\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n}\n\nexport default TeamDialog"],"names":["PeopleTable","props","people","theme","useTheme","isSmall","useMediaQuery","breakpoints","down","visibleColumns","title","phone","address","email","_jsx","Grid","item","xs","sx","height","children","DataGrid","rows","columns","field","headerName","flex","slots","toolbar","GridToolbar","initialState","pagination","paginationModel","pageSize","columnVisibilityModel","pageSizeOptions","uuid","useParams","_React$useState","React","_React$useState2","_slicedToArray","loading","setLoading","_React$useState3","_React$useState4","team","setTeam","apiContext","APIContext","api","driver","lastUpdate","_load","_asyncToGenerator","_regeneratorRuntime","mark","_callee","t","wrap","_context","prev","next","org","getDetailedOrg","sent","stop","apply","arguments","load","_jsxs","ContentGrid","LoadingSkeleton","TeamCard","_objectSpread","noLink","AdminChip","name","id","Link","to","concat","style","textDecoration","color","Chip","label","clickable","open","close","adminList","admins","Dialog","maxWidth","fullWidth","onClose","DialogTitle","align","DialogContent","Stack","spacing","marginTop","TextField","disabled","value","Divider","direction","map","admin","DialogActions","Button","variant","onClick","AdminActions","user","UserContext","editOpen","setEditOpen","deleteOpen","setDeleteOpen","_deleteTeam","deleteTeam","update","_Fragment","IconButton","EditIcon","fontSize","DeleteIcon","TeamDialog","ConfirmDialog","callback","text","LinkButton","icon","external","target","Tooltip","memberCount","addressURL","encodeURIComponent","emailURL","phoneURL","_React$useState5","_React$useState6","infoOpen","setInfoOpen","Card","CardHeader","titleTypographyProps","avatar","Avatar","bgcolor","palette","primary","dark","CardActions","InfoIcon","LaunchIcon","Box","flexGrow","PlaceIcon","EmailIcon","CallIcon","TeamQuickInfoDialog","emptyTeam","startData","data","setData","handleClose","_submit","editTeam","addTeam","onChange","event"],"sourceRoot":""}